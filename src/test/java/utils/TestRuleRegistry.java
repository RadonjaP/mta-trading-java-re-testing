package utils;

import com.rprelevic.re.core.RuleRegistry;

import static com.rprelevic.re.core.ConditionsAndRules.*;
import static utils.TestRuleId.*;

public class TestRuleRegistry extends RuleRegistry {

    static {
        // Conditions
        RULES.put(SIGNAL_IS_PULLBACK_FALSE.value(), COND_SIGNAL_IS_NOT_PULLBACK);
        RULES.put(HAS_CFRM_SIGNAL_FALSE.value(), COND_HAS_NO_CFRM_SIGNAL);
        RULES.put(HAS_2ND_CFRM_SIGNAL_FALSE.value(), COND_HAS_NO_2ND_CFRM_SIGNAL);
        RULES.put(BASELINE_MATCH_TREND_FALSE.value(), COND_BASELINE_DOES_NOT_MATCH_TREND);
        RULES.put(CONTINUATION_TRADE_FALSE.value(), COND_IS_NOT_CONTINUATION_TRADE);
        RULES.put(VOLUME_EXISTS_FALSE.value(), COND_VOLUME_DOES_NOT_EXIST);
        RULES.put(PRICE_TO_BASELINE_LTHAN_ATR_FALSE.value(), COND_PRICE_TO_BASELINE_NOT_LTHEN_ATR);
        RULES.put(BASELINE_CROSSED_FALSE.value(), COND_BASELINE_IS_NOT_CROSSED);
        RULES.put(CFRM_OPPOSITE_SIGNAL_FALSE.value(), COND_CFRM_NOT_OPPOSITE_SIGNAL);
        RULES.put(BASELINE_CROSSED_EXIT_FALSE.value(), COND_BASELINE_IS_NOT_CROSSED);
        RULES.put(TRAILING_STOP_HIT_FALSE.value(), COND_PRICE_DID_NOT_HIT_TS);
        RULES.put(CFRM_MATCHES_BASELINE_SIGNAL_FALSE.value(), COND_CFRM_NOT_MATCHES_BL_SIGNAL);

        RULES.put(ACTIVE_TRADE_EXISTS_FALSE.value(), COND_HAVE_NO_ACTIVE_TRADE);
        RULES.put(STOP_LOSS_HIT_FALSE.value(), COND_PRICE_DID_NOT_HIT_SL);
        RULES.put(TAKE_PROFIT_HIT_FALSE.value(), COND_PRICE_DID_NOT_HIT_TP);
        RULES.put(EXIT_SIGNAL_FALSE.value(), COND_DID_NOT_GET_EXIT_SIGNAL);
        RULES.put(ACTIVE_TRADE_TO_CHALK_EXISTS_FALSE.value(), COND_HAVE_NO_ACTIVE_TRADE_CHALK);
        RULES.put(END_OF_FLOW.value(), ACTION_TERMINATE);
    }

}